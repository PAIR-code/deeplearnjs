{"dependencies":[{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/tsconfig.json","includedInParent":true,"mtime":1529003832385},{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/test/package.json","includedInParent":true,"mtime":1530637734514}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pool2DProgram = function () {\n    function Pool2DProgram(convInfo, poolType, computePositions) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        var isAvgPool = poolType === 'avg';\n        var initializationValue = '0.0';\n        if (!isAvgPool) {\n            initializationValue = '-1.0 / 0.0';\n        }\n        if (computePositions) {\n            var compareOp_1 = '>=';\n            this.userCode = \"\\n        const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n        const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value \" + compareOp_1 + \" currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \" + filterWidth + \" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";\n            return;\n        }\n        var compareOp = 'max';\n        var returnValue = poolType + \"(\" + poolType + \"(\" + poolType + \"(\" + 'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = \"avgValue / count\";\n        }\n        var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        var filterWidthVec4Remainder = filterWidth % 4;\n        var updateSnippet = \"\\n      if (\" + isAvgPool + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidthNearestVec4 + \"; wC += 4) {\\n            int xC = xCCorner + wC;\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              getValue(batch, xR, xC + 3, d)\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n\\n          int xC = xCCorner + \" + filterWidthNearestVec4 + \";\\n          if (\" + (filterWidthVec4Remainder === 1) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 2) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 3) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return Pool2DProgram;\n}();\nexports.Pool2DProgram = Pool2DProgram;","map":{"mappings":[{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":4,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":4,"column":4}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":4,"column":20}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":4,"column":32}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":5,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":5,"column":13}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":5,"column":26}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":5,"column":27}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":5,"column":35}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":27,"column":28},"generated":{"line":5,"column":37}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":5,"column":45}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":27,"column":51},"generated":{"line":5,"column":47}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":5,"column":63}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":27,"column":76},"generated":{"line":5,"column":65}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":6,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":6,"column":13}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":6,"column":26}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":6,"column":29}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":6,"column":30}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":6,"column":33}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":6,"column":34}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":7,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":7,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":28,"column":21},"generated":{"line":7,"column":25}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":7,"column":30}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":28,"column":30},"generated":{"line":7,"column":34}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":7,"column":50}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":28,"column":48},"generated":{"line":7,"column":52}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":8,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":8,"column":18}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":8,"column":22}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":8,"column":27}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":8,"column":28}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":8,"column":72}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":8,"column":73}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":30,"column":5},"generated":{"line":9,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":10,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":10,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":32,"column":25},"generated":{"line":10,"column":27}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":32,"column":34},"generated":{"line":10,"column":36}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":10,"column":48}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":11,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":11,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":11,"column":26}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":33,"column":33},"generated":{"line":11,"column":35}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":11,"column":46}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":12,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":12,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":34,"column":25},"generated":{"line":12,"column":27}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":34,"column":34},"generated":{"line":12,"column":36}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":12,"column":48}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":13,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":13,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":35,"column":24},"generated":{"line":13,"column":26}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":35,"column":33},"generated":{"line":13,"column":35}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":13,"column":46}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":14,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":14,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":14,"column":21}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":36,"column":28},"generated":{"line":14,"column":30}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":14,"column":37}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":14,"column":38}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":14,"column":41}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":15,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":15,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":37,"column":20},"generated":{"line":15,"column":22}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":37,"column":29},"generated":{"line":15,"column":31}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":37,"column":20},"generated":{"line":15,"column":38}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":37,"column":37},"generated":{"line":15,"column":39}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":15,"column":43}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":16,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":16,"column":13}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":16,"column":24}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":38,"column":23},"generated":{"line":16,"column":27}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":38,"column":32},"generated":{"line":16,"column":36}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":16,"column":44}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":17,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":17,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":40,"column":22},"generated":{"line":17,"column":24}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":40,"column":35},"generated":{"line":17,"column":37}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":17,"column":42}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":42,"column":8},"generated":{"line":18,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":42,"column":30},"generated":{"line":18,"column":34}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":39}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":19,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":19,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":19,"column":13}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":19,"column":22}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":43,"column":20},"generated":{"line":19,"column":24}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":20,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":44,"column":28},"generated":{"line":20,"column":34}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":20,"column":46}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":45,"column":5},"generated":{"line":21,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":22,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":22,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":22,"column":28}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":22,"column":30}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":23,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":48,"column":12},"generated":{"line":23,"column":16}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":48,"column":24},"generated":{"line":23,"column":30}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":23,"column":34}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":24,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":11},"generated":{"line":24,"column":17}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":24,"column":25}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":28}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":51,"column":38},"generated":{"line":24,"column":71}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":83}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":51,"column":50},"generated":{"line":24,"column":86}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":90}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":51,"column":55},"generated":{"line":24,"column":93}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":104}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":51,"column":66},"generated":{"line":24,"column":107}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":146}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":52,"column":35},"generated":{"line":24,"column":149}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":155}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":52,"column":41},"generated":{"line":24,"column":158}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":162}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":52,"column":46},"generated":{"line":24,"column":165}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":172}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":52,"column":53},"generated":{"line":24,"column":175}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":722}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":70,"column":34},"generated":{"line":24,"column":725}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":737}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":70,"column":46},"generated":{"line":24,"column":740}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":824}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":73,"column":34},"generated":{"line":24,"column":827}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":73,"column":43},"generated":{"line":24,"column":836}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":844}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":73,"column":51},"generated":{"line":24,"column":847}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":930}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":77,"column":36},"generated":{"line":24,"column":933}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":944}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":77,"column":47},"generated":{"line":24,"column":947}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":1035}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":80,"column":36},"generated":{"line":24,"column":1038}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":80,"column":45},"generated":{"line":24,"column":1047}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":1054}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":80,"column":52},"generated":{"line":24,"column":1057}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":1411}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":90,"column":26},"generated":{"line":24,"column":1414}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":1425}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":90,"column":35},"generated":{"line":24,"column":1428}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":1568}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":93,"column":40},"generated":{"line":24,"column":1571}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":24,"column":1582}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":93,"column":51},"generated":{"line":24,"column":1585}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":24,"column":1702}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":100,"column":6},"generated":{"line":25,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":101,"column":5},"generated":{"line":26,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":103,"column":4},"generated":{"line":27,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":27,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":103,"column":22},"generated":{"line":27,"column":24}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":103,"column":4},"generated":{"line":27,"column":29}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":28,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":8},"generated":{"line":28,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":25},"generated":{"line":28,"column":26}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":33},"generated":{"line":28,"column":37}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":25},"generated":{"line":28,"column":40}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":37},"generated":{"line":28,"column":43}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":25},"generated":{"line":28,"column":51}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":45},"generated":{"line":28,"column":54}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":25},"generated":{"line":28,"column":57}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":49},"generated":{"line":28,"column":60}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":25},"generated":{"line":28,"column":68}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":57},"generated":{"line":28,"column":71}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":25},"generated":{"line":28,"column":74}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":106,"column":8},"generated":{"line":28,"column":77}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":28,"column":144}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":29,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":107,"column":8},"generated":{"line":29,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":107,"column":21},"generated":{"line":29,"column":25}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":29,"column":30}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":107,"column":28},"generated":{"line":29,"column":32}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":108,"column":6},"generated":{"line":30,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":108,"column":20},"generated":{"line":30,"column":26}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":108,"column":6},"generated":{"line":30,"column":44}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":109,"column":5},"generated":{"line":31,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":32,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":10},"generated":{"line":32,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":35},"generated":{"line":32,"column":37}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":40},"generated":{"line":32,"column":42}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":35},"generated":{"line":32,"column":47}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":46},"generated":{"line":32,"column":48}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":60},"generated":{"line":32,"column":62}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":35},"generated":{"line":32,"column":63}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":65},"generated":{"line":32,"column":67}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":32,"column":68}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":33,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":112,"column":10},"generated":{"line":33,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":112,"column":37},"generated":{"line":33,"column":39}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":112,"column":51},"generated":{"line":33,"column":53}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":33,"column":54}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":114,"column":4},"generated":{"line":34,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":114,"column":10},"generated":{"line":34,"column":12}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":114,"column":26},"generated":{"line":34,"column":28}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":115,"column":12},"generated":{"line":34,"column":45}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":114,"column":26},"generated":{"line":34,"column":54}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":115,"column":21},"generated":{"line":34,"column":57}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":114,"column":26},"generated":{"line":34,"column":142}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":118,"column":24},"generated":{"line":34,"column":145}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":114,"column":26},"generated":{"line":34,"column":154}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":118,"column":33},"generated":{"line":34,"column":157}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":114,"column":4},"generated":{"line":34,"column":196}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":35,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":9},"generated":{"line":35,"column":13}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":35,"column":21}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":24}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":123,"column":36},"generated":{"line":35,"column":65}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":77}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":123,"column":48},"generated":{"line":35,"column":80}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":84}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":123,"column":53},"generated":{"line":35,"column":87}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":98}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":123,"column":64},"generated":{"line":35,"column":101}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":138}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":124,"column":33},"generated":{"line":35,"column":141}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":147}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":124,"column":39},"generated":{"line":35,"column":150}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":154}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":124,"column":44},"generated":{"line":35,"column":157}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":164}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":124,"column":51},"generated":{"line":35,"column":167}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":213}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":125,"column":42},"generated":{"line":35,"column":216}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":235}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":125,"column":61},"generated":{"line":35,"column":238}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":410}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":131,"column":30},"generated":{"line":35,"column":413}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":131,"column":39},"generated":{"line":35,"column":422}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":429}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":131,"column":46},"generated":{"line":35,"column":432}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":937}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":149,"column":34},"generated":{"line":35,"column":940}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":959}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":149,"column":53},"generated":{"line":35,"column":962}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1053}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":153,"column":32},"generated":{"line":35,"column":1056}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1068}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":153,"column":44},"generated":{"line":35,"column":1071}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1151}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":156,"column":32},"generated":{"line":35,"column":1154}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":156,"column":41},"generated":{"line":35,"column":1163}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1171}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":156,"column":49},"generated":{"line":35,"column":1174}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1251}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":160,"column":34},"generated":{"line":35,"column":1254}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1276}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":160,"column":56},"generated":{"line":35,"column":1279}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1580}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":170,"column":14},"generated":{"line":35,"column":1583}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1596}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":170,"column":27},"generated":{"line":35,"column":1599}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1648}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":173,"column":32},"generated":{"line":35,"column":1651}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1673}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":173,"column":54},"generated":{"line":35,"column":1676}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1695}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":174,"column":16},"generated":{"line":35,"column":1699}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":174,"column":45},"generated":{"line":35,"column":1728}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1729}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":174,"column":46},"generated":{"line":35,"column":1733}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1953}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":182,"column":14},"generated":{"line":35,"column":1956}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1969}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":182,"column":27},"generated":{"line":35,"column":1972}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":1997}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":183,"column":23},"generated":{"line":35,"column":2001}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":183,"column":52},"generated":{"line":35,"column":2030}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2031}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":183,"column":53},"generated":{"line":35,"column":2035}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2266}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":191,"column":14},"generated":{"line":35,"column":2269}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2282}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":191,"column":27},"generated":{"line":35,"column":2285}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2310}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":192,"column":23},"generated":{"line":35,"column":2314}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":192,"column":52},"generated":{"line":35,"column":2343}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2344}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":192,"column":53},"generated":{"line":35,"column":2348}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2590}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":200,"column":14},"generated":{"line":35,"column":2593}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2606}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":200,"column":27},"generated":{"line":35,"column":2609}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2655}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":203,"column":20},"generated":{"line":35,"column":2658}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":35,"column":2669}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":203,"column":31},"generated":{"line":35,"column":2672}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":35,"column":2691}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":36,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":207,"column":0},"generated":{"line":37,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":207,"column":0},"generated":{"line":37,"column":11}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":207,"column":0},"generated":{"line":37,"column":24}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":38,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":38,"column":1}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":38,"column":3}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":39,"column":0}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":39,"column":8}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":39,"column":21}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":39,"column":24}},{"source":"../src/kernels/webgl/pool_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":39,"column":37}}],"sources":{"../src/kernels/webgl/pool_gpu.ts":"/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Pool2DProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: Conv2DInfo, poolType: 'max'|'avg', computePositions: boolean) {\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n\n    const isAvgPool = poolType === 'avg';\n\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      initializationValue = '-1.0 / 0.0';\n    }\n\n    if (computePositions) {\n      const compareOp = '>=';\n\n      this.userCode = `\n        const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n        const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${compareOp} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = wR * ${filterWidth} + wC;\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n\n    const compareOp = 'max';\n\n    let returnValue = `${poolType}(${poolType}(${poolType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      returnValue = `avgValue / count`;\n    }\n\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n            int xC = xCCorner + wC;\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + 1, d),\n              getValue(batch, xR, xC + 2, d),\n              getValue(batch, xR, xC + 3, d)\n            );\n\n            ${updateSnippet}\n          }\n\n          int xC = xCCorner + ${filterWidthNearestVec4};\n          if (${filterWidthVec4Remainder === 1}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 2}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + 1, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 3}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + 1, d),\n              getValue(batch, xR, xC + 2, d),\n              initializationValue\n            );\n\n            ${updateSnippet}\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"hash":"76b17297d4468086c5ec2f0207e12297","cacheData":{"env":{}}}